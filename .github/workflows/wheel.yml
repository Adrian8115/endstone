name: Wheel

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

permissions: read-all

jobs:
  build_wheels_windows:
    name: Build Wheels for Python ${{ matrix.python }} on Windows

    strategy:
      fail-fast: false
      matrix:
        python: [ "3.9", "3.10", "3.11", "3.12" ]

    runs-on: windows-2022
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86_64
          toolset: 14.3

      - name: Set up CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Build Wheels
        run: |
          python -m pip install -U pip
          pip install wheel
          python -m pip wheel . --no-deps --wheel-dir=dist --verbose

      - name: Test Wheels
        run: |
          pip install pytest
          Get-ChildItem ./dist/ -Filter *-win_amd64.whl | ForEach-Object {
              pip install $_.FullName
          }
          pytest python/tests

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: endstone-wheels-windows-python${{ matrix.python }}
          path: dist/*-win_amd64.whl

  build_wheels_linux:
    name: Build Wheels for Python ${{ matrix.python }} on Ubuntu

    strategy:
      fail-fast: false
      matrix:
        python: [ "3.9", "3.10", "3.11", "3.12" ]

    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Set up Clang 15
        env:
          LLVM_VERSION: 15
        run: |
          sudo apt-get update -y -q
          sudo apt-get install -y -q build-essential lsb-release wget software-properties-common gnupg
          sudo wget https://apt.llvm.org/llvm.sh
          sudo chmod +x llvm.sh
          sudo ./llvm.sh ${LLVM_VERSION}
          sudo apt-get install -y -q libc++-${LLVM_VERSION}-dev libc++abi-${LLVM_VERSION}-dev
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM_VERSION} 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM_VERSION} 100
          sudo update-alternatives --install /usr/bin/llvm-cov llvm-cov /usr/bin/llvm-cov-${LLVM_VERSION} 100
          sudo update-alternatives --install /usr/bin/ld ld /usr/bin/ld.lld-${LLVM_VERSION} 100

      - name: Set up CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Build Wheels
        run: |
          python -m pip install -U pip
          pip install wheel
          python -m pip wheel . --no-deps --wheel-dir=wheelhouse --verbose

      - name: Repair Wheels
        run: |
          pip install auditwheel setuptools "patchelf>=0.14"
          python -m auditwheel --verbose repair --plat manylinux_2_31_x86_64 -w dist wheelhouse/*.whl

      - name: Test Wheels
        run: |
          pip install pytest
          pip install dist/*-manylinux_2_31_x86_64.whl
          pytest python/tests

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: endstone-wheels-linux-python${{ matrix.python }}
          path: dist/*-manylinux_2_31_x86_64.whl

  build_bundle_windows:
    name: Build Bundle for Windows
    runs-on: windows-latest
    needs: [ build_wheels_windows ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download WinPython
        run: curl -L "https://github.com/winpython/winpython/releases/download/7.5.20240410final/Winpython64-3.12.3.0dot.exe" -o "Winpython64-3.12.3.0dot.exe"

      - name: Verify SHA256 Checksum
        run: |
          $expected = "beef54eba558559255a73e59ae1986e8d06a6b12b55e78645ab42b4d6974e124"
          $actual = Get-FileHash -Path "Winpython64-3.12.3.0dot.exe" -Algorithm SHA256
          if ($actual.Hash -ne $expected) {
            Write-Error "SHA256 checksum verification failed!"
            exit 1
          }

      - name: Extract the WinPython Executable
        run: ./Winpython64-3.12.3.0dot.exe -otemp -y

      - name: Copy Python to Target Directory
        run: |
          New-Item -Path build/bin -Name python -ItemType Directory
          Copy-Item -Path temp/WPy64-31230/python-3.12.3.amd64/* -Destination build/bin/python -Recurse -Force

      - name: Copy Start Scripts
        run: |
          Copy-Item -Path scripts/start.cmd -Destination build
          Copy-Item -Path scripts/start.ps1 -Destination build

      - name: Download Endstone Package
        uses: actions/download-artifact@v4
        with:
          name: endstone-wheels-windows-python3.12
          path: build

      - name: Install Endstone Package
        run: |
          Get-ChildItem build/ -Filter *-win_amd64.whl | ForEach-Object {
              build/bin/python/python.exe -m pip install $_.FullName
          }

      - name: Create the Distribution
        run: Compress-Archive -Path build/* -Destination dist/endstone_server_windows.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: endstone-server-windows
          path: dist/endstone_server_windows.zip

  publish:
    name: Publish Wheels to PyPI
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build_wheels_windows, build_wheels_linux ]
    environment: pypi
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Restore Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: endstone-wheels-*
          path: dist
          merge-multiple: true

      - name: Create a Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  release:
    name: Release
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build_bundle_windows ]
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Restore Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: endstone-server-*
          path: dist
          merge-multiple: true

      - name: Create a Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*